#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass foils
\use_default_options false
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "tgheros" "default"
\font_typewriter "beramono" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 20
\spacing single
\use_hyperref false
\papersize a4paper
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation landscape
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 1.5cm
\topmargin 2cm
\rightmargin 1.5cm
\bottommargin 3cm
\secnumdepth 1
\tocdepth 1
\paragraph_separation skip
\defskip smallskip
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout My Logo
\begin_inset space ~
\end_inset


\end_layout

\begin_layout Title
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

More thoughts on scientific code development
\end_layout

\begin_layout Author
Christopher Albert
\end_layout

\begin_layout Foilhead
Lessons learned last time
\end_layout

\begin_layout Itemize
Non-standard tools for production use have disadvantages
\end_layout

\begin_deeper
\begin_layout Itemize
High maintainance effort
\end_layout

\begin_layout Itemize
Devs and users need to learn custom system
\end_layout

\begin_layout Itemize
Less interoperable with existing codes
\end_layout

\end_deeper
\begin_layout Itemize
New strategy with standard tools
\end_layout

\begin_deeper
\begin_layout Itemize
Compile time dispatch using CMake config variables
\end_layout

\begin_layout Itemize
Runtime dispatch using Fortran interface blocks
\end_layout

\begin_layout Itemize
Can still avoid runtime linking of shared libraries
\end_layout

\end_deeper
\begin_layout Itemize
Result: Modular, simple F95 code that is 
\end_layout

\begin_deeper
\begin_layout Itemize
Easy to read and extend
\end_layout

\begin_layout Itemize
Highly optimizable by compiler
\end_layout

\begin_layout Itemize
Can be interfaced easily (f2py, fffi, Matlab, C, Julia, R, ...)
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Foilhead
The beauty of Fortran
\end_layout

\begin_layout Itemize
Variable declaration at beginning pushes you to write small routines
\end_layout

\begin_layout Itemize
\begin_inset Quotes eld
\end_inset

USE
\begin_inset Quotes erd
\end_inset

 statement can be made at innermost scope
\end_layout

\begin_layout Itemize
Stateless (like REST) architecture possible even with global subroutines
\end_layout

\begin_deeper
\begin_layout Itemize
However, writing module variables from global subroutines is discouraged
\end_layout

\begin_layout Itemize
In that case, better include routines with module that they modify
\end_layout

\begin_layout Itemize
Or, even better, use typed structs as explicit arguments
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Foilhead
Compile time configuration with CMake
\end_layout

\begin_layout Standard
From NEO-RT/VER_2/SRC/CMakeLists.txt :
\end_layout

\begin_layout Standard
\begin_inset space ~
\end_inset


\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\footnotesize},frame=single"
inline false
status open

\begin_layout Plain Layout

message(STATUS "CMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}")
\end_layout

\begin_layout Plain Layout

message(STATUS "ORBIT_MODE=${ORBIT_MODE}")
\end_layout

\begin_layout Plain Layout

message(STATUS 
\end_layout

\begin_layout Plain Layout

"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --
\end_layout

\begin_layout Plain Layout

List config using 'cmake -L .'
\end_layout

\begin_layout Plain Layout

and change using 'cmake -DVAR_NAME=VALUE .'
\end_layout

\begin_layout Plain Layout

or edit CMakeCache.txt
\end_layout

\begin_layout Plain Layout

-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --"
\end_layout

\begin_layout Plain Layout

)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

if (ORBIT_MODE STREQUAL full)
\end_layout

\begin_layout Plain Layout

  target_sources(neo-rt.x PRIVATE orbit_full.f90 transport_full.f90)
\end_layout

\begin_layout Plain Layout

  add_subdirectory(../../POTATO/VER_3/SRC potato)
\end_layout

\begin_layout Plain Layout

endif()
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset space ~
\end_inset


\end_layout

\begin_layout Standard
Here POTATO/VER_3/SRC/ contains its own CMakeLists.txt with source list.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Foilhead
What else has revolutionized work last week
\end_layout

\begin_layout Itemize
https://www.mathcha.io/ for writing and drawing online with 
\emph on
LaTeX
\emph default
 and 
\emph on
TikZ
\emph default
 (like online 
\emph on
LyX
\emph default
)
\end_layout

\begin_layout Itemize
https://www.sphinx-doc.org/ together with 
\emph on
sphinx-fortran
\emph default
 and 
\emph on
sphinx-math-dollar
\emph default
 for docs
\end_layout

\begin_deeper
\begin_layout Itemize
...
 or Doxygen, or combination of two
\end_layout

\end_deeper
\begin_layout Itemize
WSL2 for running Linux inside Windows
\end_layout

\begin_layout Itemize
Visual Studio Code + Modern Fortran + Fortran IntelliSense, with WSL2 integratio
n
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\end_body
\end_document
